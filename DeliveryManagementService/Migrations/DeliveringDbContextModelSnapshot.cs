// <auto-generated />
using System;
using DeliveryManagementService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DeliveryManagementService.Migrations
{
    [DbContext(typeof(DeliveringDbContext))]
    partial class DeliveringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeliveryManagementService.Domain.Entities.OrderDelivering", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveringDatetime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("OrderDeliverings");
                });

            modelBuilder.Entity("DeliveryManagementService.Domain.Entities.OrderDelivering", b =>
                {
                    b.OwnsOne("DeliveryManagementService.Domain.ValueObjects.Adresse", "DeliveryAdresse", b1 =>
                        {
                            b1.Property<Guid>("OrderDeliveringId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DeliveryCity");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DeliveryPostalCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DeliveryStreet");

                            b1.HasKey("OrderDeliveringId");

                            b1.ToTable("OrderDeliverings");

                            b1.WithOwner()
                                .HasForeignKey("OrderDeliveringId");
                        });

                    b.OwnsOne("DeliveryManagementService.Domain.ValueObjects.Adresse", "PickupAdresse", b1 =>
                        {
                            b1.Property<Guid>("OrderDeliveringId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PickupCity");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PickupPostalCode");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PickupStreet");

                            b1.HasKey("OrderDeliveringId");

                            b1.ToTable("OrderDeliverings");

                            b1.WithOwner()
                                .HasForeignKey("OrderDeliveringId");
                        });

                    b.Navigation("DeliveryAdresse")
                        .IsRequired();

                    b.Navigation("PickupAdresse")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
